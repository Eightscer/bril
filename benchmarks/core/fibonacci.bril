# Recursive Fibonacci Computation

# ARGS: 10
@main(a: int) {
  res: int = call @Fibonacci a;
  res: int = id res;
  v15: int = id res;
  print v15;
  v16: int = const 0;
}

@Fibonacci(n: int): int {
  v1: int = id n;
  v2: int = const 1;
  v3: bool = le v1 v2;
  br v3 .then.0 .else.0;
.then.0:
  v4: int = id n;
  ret v4;
.else.0:
  v5: int = id n;
  v6: int = const 1;
  v7: int = sub v5 v6;
  v8: int = call @Fibonacci v7;
  v9: int = id n;
  v10: int = const 2;
  v11: int = sub v9 v10;
  v12: int = call @Fibonacci v11;
  v13: int = add v8 v12;
  ret v13;
}
